name: build-desktop

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [created, edited]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - name: echo event name
        run: |
          echo "${{ github.event_name }}"
          echo "${{ github.ref }}"

      - uses: actions/checkout@v2

      ############ Set Up ############

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Setup Node.js
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 14.x

      ############ Build frontend ############

      - name: Build frontend
        run: |
          cd packages/frontend
          npm i -g yarn rimraf
          yarn
          yarn build

      ############ Build app (Windows) ############

      - name: Build app (Windows)
        if: matrix.platform == 'windows-latest'
        run: |
          cd packages/app
          go build --tags "sqlite_fts5" -ldflags="-H windowsgui" -o rep2recall.exe

      # Not supported in Windows
      # https://github.com/golang/go/issues/19282
      - name: Build plugins (Windows)
        if: matrix.platform == 'windows-latest'
        run: |
          cd packages/app
          rimraf plugins

          mkdir plugins
          # go build -buildmode=plugin -o plugins/ __plugins__/gtts

      ############ Build app (non-Windows) ############

      - name: Build app (non-Windows)
        if: matrix.platform != 'windows-latest'
        run: |
          cd packages/app
          go build --tags "sqlite_fts5" -o rep2recall
      - name: Build plugins (non-Windows)
        if: matrix.platform != 'windows-latest'
        run: |
          cd packages/app
          rm -rf ./plugins
          go build -buildmode=plugin -o ./plugins/ ./__plugins__/gtts

      ############ Packaging (Linux) ############

      - name: Packaging (Linux)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          mkdir dist

          cp packages/app/rep2recall dist/rep2recall
          cp -r packages/app/plugins dist/plugins
          cp -r packages/app/public dist/public

          cd dist
          tar -czf ../rep2recall-linux.tar.gz *
      - name: Upload binaries to auto (Linux)
        if: matrix.platform == 'ubuntu-latest' && github.event_name != 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: rep2recall-linux.tar.gz
          overwrite: true
          tag: auto-${{ github.ref }}
          body: Auto-built for main branch pushes
      - name: Upload binaries to release (Linux)
        if: matrix.platform == 'ubuntu-latest' && github.event_name == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: rep2recall-linux.tar.gz
          overwrite: true
          tag: ${{ github.ref }}
          body: Auto-built for main branch pushes

      ############ Packaging (macOS) ############

      - name: Packaging (macOS)
        if: matrix.platform == 'macos-latest'
        run: |
          mkdir dist

          cp packages/app/rep2recall dist/rep2recall
          cp -r packages/app/plugins dist/plugins
          cp -r packages/app/public dist/public

          cd dist
          zip -r ../rep2recall-macos.zip *
      - name: Upload binaries to auto (macOS)
        if: matrix.platform == 'macos-latest' && github.event_name != 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: rep2recall-macos.zip
          overwrite: true
          tag: auto-${{ github.ref }}
          body: Auto-built for main branch pushes
      - name: Upload binaries to release (macOS)
        if: matrix.platform == 'macos-latest' && github.event_name == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: rep2recall-macos.zip
          overwrite: true
          tag: ${{ github.ref }}
          body: Auto-built for main branch pushes

      ############ Packaging (Windows) ############

      - name: Packaging (Windows)
        if: matrix.platform == 'windows-latest'
        run: |
          mkdir dist

          cp packages/app/rep2recall.exe dist/rep2recall.exe
          cp -r packages/app/plugins dist/plugins
          cp -r packages/app/public dist/public

          cd dist
          tar -cf ../rep2recall-windows.tar *
      - name: Upload binaries to auto (Windows)
        if: matrix.platform == 'windows-latest' && github.event_name != 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: rep2recall-windows.tar
          overwrite: true
          tag: auto-${{ github.ref }}
          body: Auto-built for main branch pushes
      - name: Upload binaries to release (Windows)
        if: matrix.platform == 'windows-latest' && github.event_name == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: rep2recall-windows.tar
          overwrite: true
          tag: ${{ github.ref }}
          body: Auto-built for main branch pushes
